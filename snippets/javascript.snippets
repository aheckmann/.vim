# Docs
snippet /
	/**
	 * ${1}
	 *
	 * @param {${2:type}} ${3:name}
	 */

# console.error
snippet e
	console.error(${1});${2}
# undefined
snippet un
	undefined
# console.log
snippet l
	console.log(${1});${2}
# Object.keys
snippet key
	var ${1:keys} = Object.keys(${2:object})
	  , ${3:i} = $1.length
		, ${4:key}

	${4}
# require()
snippet r
	require('${1}')${2}
# named function
snippet ff
	function (${1}) {
		${2}
	})
snippet f
	function ${1}(${2}) {
		${3}
	}
# named function with err
snippet fe
	function ${1:function_name} (err, ${2}) {
		if (err) ${3}
		${4}
	}
# modele exports
snippet me
	module.exports = ${1}
# exports
snippet ex
	exports = ${1}
snippet re
	return ${1}
snippet p
	prototype${1}
# mocha
snippet d
	describe('${1}', function(){
		${2}
	})
snippet bf
	before(function(){
		${1}
	})
snippet bfe
	beforeEach(function(){
		${1}
	})
snippet af
	after(function(){
		${1}
	})
snippet afe
	afterEach(function(){
		${1}
	})
snippet it
	it('${1}', function(done){
		${2}
		done();
	})
snippet a
	assert(${1});
snippet aok
	assert.ok(${1});
snippet ae
	assert.equal(${1}, ${2});
snippet ade
	assert.deepEqual(${1}, ${2});
snippet at
	assert.throws(function () {
		${1}
	}, /${2}/);
snippet adnt
	assert.doesNotThrow(function () {
		${1}
	});
snippet ao
	assert.ok(${1});
snippet aie
	assert.ifError(err);${1}
snippet ien
	if (err) return next(err);${1}
snippet ied
	if (err) return done(err);${1}
snippet iet
	if (err) throw err;${1}
snippet arg
	arguments${1}
snippet ins
	instanceof ${1}
snippet prn
	process.nextTick(function () {
	  ${1}
	});
